name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python requirements
        run: python -m venv venv && source venv/bin/activate && python -m pip install maturin

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: stable
          components: rustfmt, clippy

      - name: Build Rust Extension
        run: cargo build --release

      - name: Create Python Wheel
        run: source venv/bin/activate && maturin develop

      - name: Upload Python Wheel
        uses: actions/upload-artifact@v2
        with:
          name: python-wheels
          path: target/wheels/*.whl

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Python Wheels
        uses: actions/download-artifact@v2
        with:
          name: python-wheels

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      # - name: Install Twine
      #   run: python -m pip install --upgrade twine

      # - name: Upload to PyPI
      #   run: |
      #     twine upload target/wheels/*.whl
      #   env:
      #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
